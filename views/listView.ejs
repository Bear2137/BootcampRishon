<!DOCTYPE html>
<html lang="en">

<%- include('./partials/head') %>
<head>
    <style>
        .place{
            display:flex;
            flex-direction: row;
            align-items: center;
        }
        .card{
            text-align: center;
            display:flex;
            justify-content: center;
            align-content:center;
            width: 250px;
            border-radius: 20px;
            background-color: #bababa;
            padding: 5px 0px;
        }
        .locationPin{
            width: 30px;
            height: 100%;
        }
        .locationName{
            height: 100%;
            font-size:1.5em;
        }
    </style>
</head>
<body>
    <%- include('./partials/navbar', {currentPage: 'list view'}) %>

    <div class="container">
        <h1>View List</h1>
        <h1 id="name"></h1>
        <p id="desc"></p>

        <h1> PLACES: </h1>
        <div id="places"></div>
    </div>

    <script>
        const nameText = document.getElementById("name")
        const descText = document.getElementById("desc")
        const placesDiv = document.getElementById("places")

        const locationPin = () => {
            return `
                <svg class="locationPin" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-alt-fill" viewBox="0 0 16 16">
                    <path d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10m0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6"/>
                </svg>
            `
        }

        const placeDiv = (place) => {
            return `
                <div class="place">
                    <div class="card">
                        <h1 class="locationName">${place.name}</h1>
                    </div>
                    ${locationPin()}
                </div> 
            ` 
        }

        const addToView = (data) => {
            nameText.textContent = `Name: ${data.name}`
            descText.textContent = `Description: ${data.description}`

            for(const place of data.places){
                placesDiv.innerHTML += placeDiv(place);        
            }
        }

        const fetchPlace = async (id) => {
            try{
                const response = await fetch(`http://localhost:8080/api/v1/routes/${id}`)
                const data = await response.json()
                return data
            }catch(err){
                throw new Error(err)
                return {}
            }
        }

        const id = "671223f924d5ef0a8ab8373b";
        fetchPlace(id).then(addToView)
    </script>
</body>
</html>